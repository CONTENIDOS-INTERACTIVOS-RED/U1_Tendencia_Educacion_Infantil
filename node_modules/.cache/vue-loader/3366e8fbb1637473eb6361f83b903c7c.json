{"remainingRequest":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/src/views/curso/Tema1.vue?vue&type=template&id=78198f60&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/src/views/curso/Tema1.vue","mtime":1751583507729},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMS4gTW9kYWxpZGFkZXMgeSBjb25kaWNpb25lcyciKQogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNS5vdmVyZmxvdy1oaWRkZW4KCiAgICAuYmctY29sb3ItMi5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgIC5jb2wtbGctYXV0by5vcmRlci0yCiAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTEvMS5wbmcnLCBhbHQ9JycpCiAgICAgICAgLmNvbC1sZy5vcmRlci0xLm1iLTMubWItbGctMAogICAgICAgICAgLnAtNAogICAgICAgICAgICBwLm1iLTAoZGF0YS1hb3M9ImZhZGUtdXAiKSBFcyBob3JhIGRlIGluaWNpYXIgZWwgZXN0dWRpbyBkZSBsYXMgbW9kYWxpZGFkZXMgeSBjb25kaWNpb25lcyBkZWwgc2lzdGVtYSBkZSBlZHVjYWNpw7NuIGluaWNpYWwuIEVzdGUgdGVtYSBsZSBwcm9wb3JjaW9uYXLDoSB1bmEgdmlzacOzbiBjbGFyYSBkZSBsYXMgZGlmZXJlbnRlcyBmb3JtYXMgZW4gbGFzIHF1ZSBzZSBvcmdhbml6YSBsYSBlZHVjYWNpw7NuIHBhcmEgbGEgcHJpbWVyYSBpbmZhbmNpYSBlbiBDb2xvbWJpYSwgaW5jbHV5ZW5kbyBsYXMgbW9kYWxpZGFkZXMgZmFtaWxpYXIsIGluc3RpdHVjaW9uYWwgeSBjb211bml0YXJpYS4KICAgICAgCiAgICBwLm1iLTUgwqFBZMOpbnRyZXNlIGVuIGVzdGUgdGVtYSwgcGFyYSBlbnRlbmRlciBjw7NtbyBzZSBlc3RydWN0dXJhbiB5IHNlIGltcGxlbWVudGFuIGVzdGFzIG1vZGFsaWRhZGVzIGVuIGJlbmVmaWNpbyBkZSBsb3MgbmnDsW9zIHkgbGFzIGZhbWlsaWFzIQoKICAgICN0XzFfMS50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiAxLjFdIMK/UXXDqSBzb24gbGFzIG1vZGFsaWRhZGVzIGRlIGF0ZW5jacOzbiBlbiBlZHVjYWNpw7NuIGluaWNpYWw/ICAgICAKICAgIAogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctMy5tYi0zLm1iLWxnLTAKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzIucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTkKICAgICAgICBwLm1iLTEoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIEFsIGFib3JkYXIgIGxhcyBtb2RhbGlkYWRlcyBkZSBhdGVuY2nDs24gZW4gZWR1Y2FjacOzbiBpbmljaWFsLCBzZSBkZXNjdWJyZSBxdWUgZXN0YXMgbm8gc29uIHNpbXBsZW1lbnRlIGVzdHJ1Y3R1cmFzIGVzdMOhdGljYXMsIHNpbm8gZXN0cmF0ZWdpYXMgZGluw6FtaWNhcyB5IGZsZXhpYmxlcywgZGlzZcOxYWRhcyBwYXJhIGdhcmFudGl6YXIgcXVlIGNhZGEgbmnDsWEgeSBjYWRhIG5pw7FvLCBhY2NlZGEgYSB1bmEgZWR1Y2FjacOzbiBpbnRlZ3JhbCB5IGRlIGNhbGlkYWQsIGRlc2RlIGxvcyBwcmltZXJvcyBhw7FvcyBkZSBzdSB2aWRhLiBGdW5kYW1lbnRhZGFzIGVuIGxhIDxiPkVzdHJhdGVnaWEgTmFjaW9uYWwgRGUgQ2VybyBhIFNpZW1wcmU8L2I+LCBlc3RhcyBtb2RhbGlkYWRlcyB0aWVuZW4gY29tbyBwcm9ww7NzaXRvIGFkYXB0YXJzZSBhIGxhIGRpdmVyc2lkYWQgZGUgcmVhbGlkYWRlcyBzb2Npb2N1bHR1cmFsZXMsIGVjb27Ds21pY2FzIHkgZ2VvZ3LDoWZpY2FzLCBxdWUgY2FyYWN0ZXJpemFuIGEgQ29sb21iaWEuIFN1IG9iamV0aXZvIHByaW5jaXBhbCBlcyBhc2VndXJhciBxdWUgbmluZ8O6biBuacOxbyBvIG5pw7FhIHF1ZWRlIGV4Y2x1aWRvIGRlbCBkZXJlY2hvIGEgdW5hIGF0ZW5jacOzbiBpbnRlZ3JhbCwgdGFsIGNvbW8gbG8gZXN0YWJsZWNlIGxhIDxiPkxleSAxODA0IGRlbCAyMDE2PC9iPi4KICAgICAgICBwKGRhdGEtYW9zPSJmYWRlLWxlZnQiKSBBaG9yYSwgaW1hZ2luZSBsYXMgZGlzdGludGFzIGZvcm1hcyBlbiBsYXMgcXVlIGxhIGVkdWNhY2nDs24gcHVlZGUgbGxlZ2FyIGEgdW4gbmnDsW8gZW4gdW5hIHpvbmEgcnVyYWwgZGUgZGlmw61jaWwgYWNjZXNvLCBhIHVuYSBjb211bmlkYWQgaW5kw61nZW5hIGNvbiB1bmFzIGNvc3R1bWJyZXMgcHJvcGlhcyBvIGEgdW5hIGZhbWlsaWEgZW4gdW4gZW50b3JubyB1cmJhbm8uIENhZGEgdW5hIGRlIGVzdGFzIHJlYWxpZGFkZXMgZGVtYW5kYSB1biBlbmZvcXVlIMO6bmljbywgeSBsYXMgbW9kYWxpZGFkZXMgZGUgYXRlbmNpw7NuIGVzdMOhbiBkaXNlw7FhZGFzIHByZWNpc2FtZW50ZSBwYXJhIHJlc3BvbmRlciBhIGVzdGFzIG5lY2VzaWRhZGVzLgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTEubWItNQogICAgICAucHgtNC5weC1tZC01LnB5LTQKICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1sZy1hdXRvCiAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzMuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgaDUubWItMCBSZWZsZXhpb25lIHVuIG1vbWVudG86IAogICAgICAgICAgICBwLm1iLTAgwr9RdcOpIGltcGFjdG8gcG9kcsOtYSB0ZW5lciB1bmEgbW9kYWxpZGFkIGRlIGF0ZW5jacOzbiBxdWUgcmVzcGV0ZSBsYXMgdHJhZGljaW9uZXMgZGUgdW5hIGNvbXVuaWRhZCBtaWVudHJhcyBwcm9tdWV2ZSBlbCBkZXNhcnJvbGxvIGludGVncmFsIGRlbCBuacOxbz8gRXN0byBubyBzb2xvIGdhcmFudGl6YSBlbCBhY2Nlc28gYSBsYSBlZHVjYWNpw7NuLCBzaW5vIHF1ZSB0YW1iacOpbiByZWZ1ZXJ6YSBlbCBzZW50aWRvIGRlIGlkZW50aWRhZCB5IHBlcnRlbmVuY2lhIGRlIGxvcyBtw6FzIHBlcXVlw7Fvcy4KICAgIAogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctNS5vcmRlci0yCiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS80LnBuZyIsIGRhdGEtYW9zPSJ6b29tLWluIikKICAgICAgLmNvbC1sZy03Lm9yZGVyLTEubWItMy5tYi1sZy0wCiAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikgUHJvZnVuZGl6YXIgZW4gZXN0ZSB0ZW1hIHBlcm1pdGUgY29tcHJlbmRlciBjw7NtbyBsYXMgbW9kYWxpZGFkZXMgZGUgYXRlbmNpw7NuIHRyYXNjaWVuZGVuIGxvcyBlbmZvcXVlcyB0cmFkaWNpb25hbGVzLiBTb24gdW5hIGludml0YWNpw7NuIGEgcGFydGljaXBhciBhY3RpdmFtZW50ZSBlbiBsYSBjcmVhY2nDs24gZGUgZW50b3Jub3MgZWR1Y2F0aXZvcyBxdWUgdmFsb3JlbiBsYSBkaXZlcnNpZGFkIHkgYnVzcXVlbiBzaWVtcHJlIGVsIGJpZW5lc3RhciBkZSBsYSBpbmZhbmNpYS4gQSBtZWRpZGEgcXVlIGF2YW56YSBlbiBlc3RlIGVzdHVkaW8sIHByZWfDum50ZXNlOiAKICAgIAogICAgICAgIC5iZy1jb2xvci0zLnAtNS50YXJqZXRhKGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgICAgcC5tYi0xIMK/UXXDqSBhY2Npb25lcyBjb25jcmV0YXMgcHVlZGVuIGltcGxlbWVudGFyc2UgcGFyYSBmb3J0YWxlY2VyIGVzdGFzIG1vZGFsaWRhZGVzIHkgYWRhcHRhcmxhcywgYcO6biBtw6FzLCBhIGxhcyBuZWNlc2lkYWRlcyBkZSBjYWRhIHJlZ2nDs24/CiAgICAgICAgICBwLm1iLTAgTGEgZWR1Y2FjacOzbiBpbmljaWFsIGVzIG3DoXMgcXVlIHVuIGRlcmVjaG87IGVzIGVsIHByaW1lciBwYXNvIHBhcmEgY29uc3RydWlyIHVuIGZ1dHVybyBsbGVubyBkZSBvcG9ydHVuaWRhZGVzIHBhcmEgdG9kb3MgbG9zIG5pw7FvcyB5IG5pw7Fhcy4gCgogICAgI3RfMV8yLnRpdHVsby1zZWd1bmRvKGRhdGEtYW9zPSJmbGlwLXVwIikKICAgICAgaDIgI1tzcGFuIDEuMl0gQ29uY2VwdHVhbGl6YWNpw7NuIGRlIGxhcyBtb2RhbGlkYWRlcyAoZmFtaWxpYXIsIGluc3RpdHVjaW9uYWwsIGNvbXVuaXRhcmlhKQogICAgCiAgICBwLm1iLTQgRW4gZWwgY29udGV4dG8gZGUgbGEgZWR1Y2FjacOzbiBpbmljaWFsIGVuIENvbG9tYmlhLCBlbCBTaXN0ZW1hIGRlIEVkdWNhY2nDs24gSW5pY2lhbCBkZWwgTWluaXN0ZXJpbyBkZSBFZHVjYWNpw7NuIE5hY2lvbmFsIChNRU4pLCBlc3RhYmxlY2UgdHJlcyBtb2RhbGlkYWRlcyBjbGF2ZXMgcGFyYSBnYXJhbnRpemFyIGVsIGRlc2Fycm9sbG8gaW50ZWdyYWwgZGUgbG9zIG5pw7FvcyB5IG5pw7FhcyBlbiBzdXMgcHJpbWVyb3MgYcOxb3MgZGUgdmlkYS4gRXN0YXMgbW9kYWxpZGFkZXMgc29uIGZ1bmRhbWVudGFsZXMgcGFyYSBvZnJlY2VyIHVuYSBlZHVjYWNpw7NuIHF1ZSBzZSBhZGFwdGUgYSBsYXMgZGlzdGludGFzIHJlYWxpZGFkZXMgZGUgbGFzIGZhbWlsaWFzIGNvbG9tYmlhbmFzLCB0YW50byBlbiDDoXJlYXMgdXJiYW5hcyBjb21vIHJ1cmFsZXMsIHkgY29uc2lkZXJhbmRvIHRhbWJpw6luIGxvcyBkaWZlcmVudGVzIGNvbnRleHRvcyBzb2Npb2Vjb27Ds21pY29zIChSb2JheW8gTm9yZcOxYSwgMjAyMSkuIENvbm96Y2Ftb3MgY2FkYSB1bmEgZGUgZWxsYXM6CgogICAgLnJvdy5hbGlnbi1pdGVtcy1zdGFydC5tYi01CiAgICAgIC5jb2wtbGctNS5tYi0zLm1iLWxnLTAoZGF0YS1hb3M9ImZhZGUtcmlnaHQiKQogICAgICAgIGZpZ3VyZQogICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvNS5wbmciLCBhbHQ9IiIpLm1iLTQubWItbGctMAogICAgICAuY29sLWxnLTcoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAKICAgICAgICBBY29yZGlvbkEodGlwbz0iYiIpCiAgICAgICAgICAuZGl2KHRpdHVsbz0iTW9kYWxpZGFkIGZhbWlsaWFyOiBlbCBob2dhciBjb21vIGVzcGFjaW8gZGUgYXByZW5kaXphamUgIikKICAgICAgICAgICAgcC5tYi0wIFN1cG9uZ2EgcXVlIGVsIGhvZ2FyIGVzIGVsIHByaW1lciBzYWzDs24gZGUgY2xhc2VzIGRlIHVuIG5pw7FvLiBFbiBsYSBtb2RhbGlkYWQgZmFtaWxpYXIsIGxvcyBwYWRyZXMsIG1hZHJlcyB5IGN1aWRhZG9yZXMsIGp1ZWdhbiB1biBwYXBlbCBjcnVjaWFsIGNvbW8gcHJpbWVyb3MgZG9jZW50ZXMuIEFxdcOtLCBlbCBhcHJlbmRpemFqZSBubyBzZSBsaW1pdGEgYSBsbyBxdWUgc3VjZWRlIGRlbnRybyBkZSBsYXMgcGFyZWRlcyBkZSB1bmEgaW5zdGl0dWNpw7NuLCBzaW5vIHF1ZSBzZSBleHRpZW5kZSBhIGxhIHZpZGEgY290aWRpYW5hLiBFc3RlIG1vZGVsbyBidXNjYSBmb3J0YWxlY2VyIGxhcyBoYWJpbGlkYWRlcyBkZSBsb3MgY3VpZGFkb3JlcywgbWVkaWFudGUgdGFsbGVyZXMgeSBjYXBhY2l0YWNpb25lcywgZG9uZGUgYXByZW5kZW4gYSBjcmVhciB1biBhbWJpZW50ZSBlc3RpbXVsYW50ZSBlbiBjYXNhLiBBY3RpdmlkYWRlcyBjb21vIGxhIGxlY3R1cmEsIGVsIGp1ZWdvIHkgbGEgY29udmVyc2FjacOzbiwgc2UgY29udmllcnRlbiBlbiBoZXJyYW1pZW50YXMgY2xhdmVzIHBhcmEgcHJvbW92ZXIgZWwgZGVzYXJyb2xsbyBjb2duaXRpdm8sIGVtb2Npb25hbCB5IHNvY2lhbCBkZSBsb3MgbmnDsW9zIChQaW50byBSb2Ryw61ndWV6LCAyMDE0KS4KICAgICAgICAgICAgcC5tYi0wIEFkZW3DoXMsIGVzIGltcG9ydGFudGUgdGVuZXIgZW4gY3VlbnRhIHF1ZSBlc3RlIG1vZGVsbyByZXN1bHRhIGVzZW5jaWFsIGVuIMOhcmVhcyBydXJhbGVzIG8gZGUgZGlmw61jaWwgYWNjZXNvLCBkb25kZSBsYXMgZmFtaWxpYXMsIGF1bnF1ZSBubyB0ZW5nYW4gdW5hIGluc3RpdHVjacOzbiBlZHVjYXRpdmEgY2VyY2EsIHB1ZWRlbiBpbnZvbHVjcmFyc2UgZGUgbWFuZXJhIGFjdGl2YSBlbiBlbCBwcm9jZXNvIGVkdWNhdGl2byBkZSBzdXMgaGlqb3MuIAogICAgICAgICAgICBwLm1iLTAgwr9RdcOpIGVqZW1wbG9zIGRlIGFjdGl2aWRhZGVzIGNvdGlkaWFuYXMgZW4gc3UgZW50b3JubyBwb2Ryw61hIHV0aWxpemFyIHBhcmEgZm9tZW50YXIgZWwgYXByZW5kaXphamUgZW4gY2FzYT8KCiAgICAKICAgICAgICAgIC5kaXYodGl0dWxvPSJNb2RhbGlkYWQgaW5zdGl0dWNpb25hbDogZXNwYWNpb3MgZm9ybWFsZXMgZGUgYXRlbmNpw7NuIGVkdWNhdGl2YSAiKQogICAgICAgICAgICBwLm1iLTAgU2UgYmFzYSBlbiB1biBlbmZvcXVlIG3DoXMgZXN0cnVjdHVyYWRvLiBFbiBlc3RlLCBsb3MgbmnDsW9zIGFzaXN0ZW4gYSBjZW50cm9zIGVkdWNhdGl2b3MgZXNwZWNpYWxpemFkb3MgY29tbyBqYXJkaW5lcyBpbmZhbnRpbGVzIG8gY2VudHJvcyBkZSBkZXNhcnJvbGxvIGluZmFudGlsLCBkaXNlw7FhZG9zIHBhcmEgb2ZyZWNlciB1biBlc3BhY2lvIHNlZ3VybyB5IGVzdGltdWxhbnRlLCBkb25kZSBsb3MgbmnDsW9zIHB1ZWRhbiBhcHJlbmRlciB5IGRlc2Fycm9sbGFyc2UgZGUgbWFuZXJhIGludGVncmFsLiBFc3RvcyBjZW50cm9zIG5vIHNvbG8gYnJpbmRhbiBhdGVuY2nDs24gZWR1Y2F0aXZhLCBzaW5vIHRhbWJpw6luIHNlcnZpY2lvcyBkZSBzYWx1ZCB5IG51dHJpY2nDs24sIGxvIHF1ZSBhc2VndXJhIHF1ZSBsb3MgbmnDsW9zIHJlY2liYW4gdW5hIGF0ZW5jacOzbiBjb21wbGV0YS4KICAgICAgICAgICAgcC5tYi0wIExvcyBlcXVpcG9zIGRlIHByb2Zlc2lvbmFsZXMsIHF1ZSBpbmNsdXllbiBwc2ljw7Nsb2dvcywgZG9jZW50ZXMgeSBudXRyaWNpb25pc3RhcywgdHJhYmFqYW4ganVudG9zIHBhcmEgZ2FyYW50aXphciBxdWUgbG9zIG5pw7FvcyByZWNpYmFuIGxhIG1lam9yIGVkdWNhY2nDs24gcG9zaWJsZS4gwr9TZSBpbWFnaW5hIGPDs21vIHNlcsOtYSB1biBkw61hIHTDrXBpY28gZW4gdW5vIGRlIGVzdG9zIGNlbnRyb3M/IExvcyBuacOxb3MgYXByZW5kZW4gYSBzb2NpYWxpemFyLCBleHBsb3JhciBzdSBjcmVhdGl2aWRhZCB5IGRlc2Fycm9sbGFyIGhhYmlsaWRhZGVzIGNvZ25pdGl2YXMsIGVuIHVuIGFtYmllbnRlIHBlbnNhZG8gZXNwZWNpYWxtZW50ZSBwYXJhIGVsbG9zIChJQ0JGLCBzLmYuKS4KICAgICAgICAgICAgcC5tYi0wIEVzdGUgbW9kZWxvIGVzIG3DoXMgY29tw7puIGVuIGxhcyDDoXJlYXMgdXJiYW5hcywgZG9uZGUgbGFzIGZhbWlsaWFzLCBkZWJpZG8gYSBzdXMgZGluw6FtaWNhcyBsYWJvcmFsZXMsIG5lY2VzaXRhbiB1biBsdWdhciBzZWd1cm8gZG9uZGUgc3VzIGhpam9zIHB1ZWRhbiByZWNpYmlyIGF0ZW5jacOzbiBkZSBjYWxpZGFkLiBMYSBtb2RhbGlkYWQgaW5zdGl0dWNpb25hbCBhc2VndXJhIHF1ZSB0b2RvcyBsb3MgbmnDsW9zIHRlbmdhbiBhY2Nlc28gYSB1bmEgZWR1Y2FjacOzbiBxdWUgcHJvbXVldmEgZWwgZGVzYXJyb2xsbywgdGFudG8gaW5kaXZpZHVhbCBjb21vIGNvbGVjdGl2by4KCiAgICAKICAgICAgICAgIC5kaXYodGl0dWxvPSJNb2RhbGlkYWQgY29tdW5pdGFyaWE6IGxhIHBhcnRpY2lwYWNpw7NuIGxvY2FsIHBhcmEgbGEgcHJpbWVyYSBpbmZhbmNpYSIpCiAgICAgICAgICAgIHAubWItMCBFc3TDoSBkaXJpZ2lkYSBhIGxhcyBjb211bmlkYWRlcyBtw6FzIHZ1bG5lcmFibGVzLCBhcXVlbGxhcyBxdWUgbm8gdGllbmVuIGbDoWNpbCBhY2Nlc28gYSBsb3Mgc2VydmljaW9zIGVkdWNhdGl2b3MgaW5zdGl0dWNpb25hbGVzLiBFbiBlc3RlIG1vZGVsbywgbGEgY29tdW5pZGFkIGp1ZWdhIHVuIHBhcGVsIGNlbnRyYWwuIEzDrWRlcmVzIGNvbXVuaXRhcmlvcyBjYXBhY2l0YWRvcywgYXN1bWVuIGVsIHJvbCBkZSBtZWRpYWRvcmVzIGVkdWNhdGl2b3MsIGJyaW5kYW5kbyBhIGxvcyBuacOxb3MgZXhwZXJpZW5jaWFzIGRlIGFwcmVuZGl6YWplIGRlbnRybyBkZSBzdXMgcHJvcGlvcyBlbnRvcm5vcy4gRXN0b3MgZXNwYWNpb3MgcHVlZGVuIHNlciBjYXNhcyB2ZWNpbmFsZXMsIHNhbG9uZXMgY29tdW5hbGVzIG8gY3VhbHF1aWVyIGx1Z2FyIGFjY2VzaWJsZSB5IGFkZWN1YWRvIHBhcmEgbGEgZW5zZcOxYW56YS4KICAgICAgICAgICAgcC5tYi0wIEVzdGEgbW9kYWxpZGFkIG5vIHNvbG8gYnVzY2EgZWR1Y2FyIGEgbG9zIG5pw7Fvcywgc2lubyB0YW1iacOpbiBmb3J0YWxlY2VyIGxhIGNvaGVzacOzbiBzb2NpYWwgeSBjcmVhciByZWRlcyBkZSBhcG95byBlbnRyZSBsb3MgbWllbWJyb3MgZGUgbGEgY29tdW5pZGFkLiDCv0xlIHBhcmVjZSBpbnRlcmVzYW50ZSBxdWUgbG9zIG5pw7FvcyByZWNpYmFuIGVkdWNhY2nDs24gZW4gc3UgcHJvcGlhIGNvbXVuaWRhZCwgYWRhcHRhZGEgYSBzdXMgbmVjZXNpZGFkZXMgeSByZWFsaWRhZGVzPyBFc3RhIG1vZGFsaWRhZCBoYSBkZW1vc3RyYWRvIHNlciBlc3BlY2lhbG1lbnRlIGVmaWNheiBlbiBjb211bmlkYWRlcyBkb25kZSBlbCBhY2Nlc28gYSBzZXJ2aWNpb3MgZWR1Y2F0aXZvcyBlcyBsaW1pdGFkbyAoRnJlaXJlLCAxOTcwKS4KCiAgICAuYmctY29sb3ItMi5tYi01KGRhdGEtYW9zPSJmYWRlLXVwIikKICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgIC5jb2wtbGctYXV0by5vcmRlci0yCiAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTEvNi5wbmcnLCBhbHQ9JycpCiAgICAgICAgLmNvbC1sZy5vcmRlci0xLm1iLTMubWItbGctMAogICAgICAgICAgLnAtNAogICAgICAgICAgICBwLm1iLTAoZGF0YS1hb3M9ImZhZGUtdXAiKSBDb21vIGhlbW9zIHZpc3RvLCBjYWRhIHVuYSBkZSBlc3RhcyBtb2RhbGlkYWRlcywgZmFtaWxpYXIsIGluc3RpdHVjaW9uYWwgeSBjb211bml0YXJpYSwgZXN0w6EgcGVuc2FkYSBwYXJhIHJlc3BvbmRlciBhIGNvbnRleHRvcyBlc3BlY8OtZmljb3MuIENhZGEgbW9kYWxpZGFkIHRpZW5lIGNhcmFjdGVyw61zdGljYXMgcHJvcGlhcywgcGVybyB0b2RhcyBidXNjYW4gbG8gbWlzbW86IGFzZWd1cmFyIHF1ZSBsb3MgbmnDsW9zIHJlY2liYW4gdW5hIGVkdWNhY2nDs24gZGUgY2FsaWRhZCBxdWUgZmF2b3JlemNhIHN1IGRlc2Fycm9sbG8gaW50ZWdyYWwgZGVzZGUgbGEgcHJpbWVyYSBpbmZhbmNpYS4gRW4gZXN0ZSBzZW50aWRvLCBlbCBzaXN0ZW1hIGVkdWNhdGl2byBjb2xvbWJpYW5vLCB0cmFiYWphIHBhcmEgZ2FyYW50aXphciBxdWUgY2FkYSBuacOxbywgc2luIGltcG9ydGFyIHN1IGx1Z2FyIGRlIHJlc2lkZW5jaWEgbyBjb25kaWNpw7NuIHNvY2lhbCwgdGVuZ2EgbGFzIGhlcnJhbWllbnRhcyBuZWNlc2FyaWFzIHBhcmEgdW4gY3JlY2ltaWVudG8gcGxlbm8uCiAgICAKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTEubWItNQogICAgICAucHgtNC5weC1tZC01LnB5LTQKICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1sZy1hdXRvCiAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzMuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgaDUubWItMCBSZWZsZXhpb25lIHVuIG1vbWVudG86IAogICAgICAgICAgICBwLm1iLTAgwr9Dw7NtbyBlc3RhcyBtb2RhbGlkYWRlcyBwdWVkZW4gaW1wYWN0YXIgZWwgZGVzYXJyb2xsbyBkZSBsb3MgbmnDsW9zIGVuIHN1IGNvbXVuaWRhZD8gCiAgICAgICAgICAgIHAubWItMCDCv1F1w6kgbW9kYWxpZGFkIHNlcsOtYSBsYSBtw6FzIGFkZWN1YWRhIHBhcmEgbG9zIG5pw7FvcyBkZSB0dSBlbnRvcm5vPwoKICAgICN0XzFfMy50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiAxLjNdIFByaW5jaXBpb3MgZGUgYXRlbmNpw7NuIGludGVncmFsIGVuIGxhIHByaW1lcmEgaW5mYW5jaWEKCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci00Lm1iLTUKICAgICAgLnB4LTQucHgtbWQtNS5weS00CiAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS83LnN2ZyIsIHN0eWxlPSJtYXgtd2lkdGg6IDkwcHgiKS5teC1hdXRvCiAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgIHAubWItMCBMb3MgcHJpbmNpcGlvcyBkZSBhdGVuY2nDs24gaW50ZWdyYWwgZW4gbGEgcHJpbWVyYSBpbmZhbmNpYSwgY29uc3RpdHV5ZW4gbGFzIGJhc2VzIGZpbG9zw7NmaWNhcyB5IG9wZXJhdGl2YXMgcXVlIG9yaWVudGFuIGxhcyBhY2Npb25lcyBkaXJpZ2lkYXMgYWwgYmllbmVzdGFyIHkgcGxlbm8gZGVzYXJyb2xsbyBkZSBsYXMgbmnDsWFzIHkgbG9zIG5pw7FvcywgZGVzZGUgc3VzIHByaW1lcm9zIGHDsW9zLiAKICAgIAogICAgcCBFc3RvcyBwcmluY2lwaW9zLCBwcm9tb3ZpZG9zIHBvciBsYSBFc3RyYXRlZ2lhIE5hY2lvbmFsIERlIENlcm8gYSBTaWVtcHJlLCBzZSBmdW5kYW1lbnRhbiBlbiBlbCByZWNvbm9jaW1pZW50byBkZSBsYSBwcmltZXJhIGluZmFuY2lhIGNvbW8gdW5hIGV0YXBhIGNydWNpYWwgcGFyYSBlbCBkZXNhcnJvbGxvIGh1bWFubywgZW4gbGEgY3VhbCBkZWJlbiBnYXJhbnRpemFyc2UgZGVyZWNob3MgZXNlbmNpYWxlcyBjb21vIGxhIGVkdWNhY2nDs24sIGxhIHNhbHVkLCBsYSBudXRyaWNpw7NuLCBsYSBwcm90ZWNjacOzbiB5IGxhIHBhcnRpY2lwYWNpw7NuIChMZXkgMTgwNCBkZWwgMjAxNikuCgogICAgaDUgQ29ub3pjYW1vcyBhbGd1bm9zIGRlIHN1cyBwcmluY2lwaW9zOgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWZvbmRvLXNsaWRlci5tYi01CiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgU2x5ZGVyQSh0aXBvPSJiIikuYmctd2hpdGUoZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUub3JkZXItMgogICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvOC5wbmciKQogICAgICAgICAgICAuY29sLWxnLTcub3JkZXItMS5tYi0zLm1iLWxnLTAKICAgICAgICAgICAgICBoNSBJbnRlcsOpcyBzdXBlcmlvciBkZWwgbmnDsW8KICAgICAgICAgICAgICBwIFVubyBkZSBsb3MgcHJpbmNpcGlvcyBjZW50cmFsZXMsIHF1ZSBlc3RhYmxlY2UgcXVlIHRvZGFzIGxhcyBkZWNpc2lvbmVzIHkgYWNjaW9uZXMsIGRlYmVuIHByaW9yaXphciBlbCBiaWVuZXN0YXIgZsOtc2ljbywgZW1vY2lvbmFsLCBzb2NpYWwgeSBjb2duaXRpdm8sIGRlIGxvcyBtZW5vcmVzLiAKICAgIAogICAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIucC00LnAtbWQtNQogICAgICAgICAgICAuY29sLWxnLTUub3JkZXItMgogICAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvOS5wbmciKQogICAgICAgICAgICAuY29sLWxnLTcub3JkZXItMS5tYi0zLm1iLWxnLTAKICAgICAgICAgICAgICBoNSBVbml2ZXJzYWxpZGFkIHkgZXF1aWRhZAogICAgICAgICAgICAgIHAgQ29tbyBjb21wbGVtZW50byBkZWwgYW50ZXJpb3IgcHJpbmNpcGlvLCBidXNjYSBnYXJhbnRpemFyIHF1ZSBjYWRhIG5pw7FvIHkgbmnDsWEsIHNpbiBpbXBvcnRhciBzdSBjb250ZXh0byBzb2Npb2Vjb27Ds21pY28gbyBjdWx0dXJhbCwgdGVuZ2EgYWNjZXNvIGEgbGFzIG1pc21hcyBvcG9ydHVuaWRhZGVzIGRlIGRlc2Fycm9sbG8uCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlci5wLTQucC1tZC01CiAgICAgICAgICAgIC5jb2wtbGctNS5vcmRlci0yCiAgICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMC5wbmciKQogICAgICAgICAgICAuY29sLWxnLTcub3JkZXItMS5tYi0zLm1iLWxnLTAKICAgICAgICAgICAgICBoNSBJbnRlZ3JhbGlkYWQKICAgICAgICAgICAgICBwIEVzdGUgYXNwZWN0byBjbGF2ZSwgcHJvbXVldmUgbGEgYXJ0aWN1bGFjacOzbiBkZSBkaXZlcnNvcyBzZWN0b3JlcywgY29tbyBsYSBlZHVjYWNpw7NuLCBsYSBzYWx1ZCB5IGxhIGZhbWlsaWEsIHBhcmEgb2ZyZWNlciB1bmEgYXRlbmNpw7NuIGNvbXBsZXRhIHF1ZSByZXNwb25kYSBhIGxhcyBtw7psdGlwbGVzIG5lY2VzaWRhZGVzIGRlIGxhIGluZmFuY2lhLiAKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtY2VudGVyLnAtNC5wLW1kLTUKICAgICAgICAgICAgLmNvbC1sZy01Lm9yZGVyLTIKICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzExLnBuZyIpCiAgICAgICAgICAgIC5jb2wtbGctNy5vcmRlci0xLm1iLTMubWItbGctMAogICAgICAgICAgICAgIGg1IFBhcnRpY2lwYWNpw7NuIGFjdGl2YQogICAgICAgICAgICAgIHAgRXN0ZSBwcmluY2lwaW8sIHJlY29ub2NlIGEgbG9zIG5pw7FvcyBjb21vIHN1amV0b3MgZGUgZGVyZWNob3MgeSBwcm9tdWV2ZSBzdSBpbnZvbHVjcmFtaWVudG8gZW4gbG9zIHByb2Nlc29zIHF1ZSBsZXMgY29uY2llcm5lbiwgcmVzcGV0YW5kbyBzaWVtcHJlIHN1IGVkYWQgeSBjYXBhY2lkYWRlcy4KCiAgICAuYmctZnVsbC13aWR0aC5iZy1jb2xvci0xLm1iLTUKICAgICAgLnB4LTQucHgtbWQtNS5weS00CiAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8zLnN2ZyIsIHN0eWxlPSJtYXgtd2lkdGg6IDkwcHgiKS5teC1hdXRvCiAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgIGg1Lm1iLTAgUmVmbGV4aW9uZSB1biBtb21lbnRvOiAKICAgICAgICAgICAgcC5tYi0wIGVzdG9zIHByaW5jaXBpb3Mgbm8gc29sbyBndcOtYW4gbGFzIHBvbMOtdGljYXMgcMO6YmxpY2FzLCBzaW5vIHF1ZSB0YW1iacOpbiBpbnZpdGFuIGEgcmVwZW5zYXIgbGEgZm9ybWEgZW4gcXVlIHNlIGNvbmNpYmUgeSBzZSBlamVjdXRhIGxhIGF0ZW5jacOzbiBpbnRlZ3JhbC4gUmVmbGV4aW9uZTogwr9jw7NtbyBzZSBwdWVkZSBnYXJhbnRpemFyIHF1ZSBlc3RvcyBwcmluY2lwaW9zIHNlIHJlZmxlamVuIGVuIGxhcyBwcsOhY3RpY2FzIGRpYXJpYXMgZGVudHJvIGRlIGxvcyBob2dhcmVzLCBsYXMgZXNjdWVsYXMgeSBsYXMgY29tdW5pZGFkZXM/IEVzdGUgY3Vlc3Rpb25hbWllbnRvIGFicmUgbGEgcHVlcnRhIGEgZXZhbHVhciBsYSBjb2hlcmVuY2lhIGVudHJlIGxvcyBtYXJjb3Mgbm9ybWF0aXZvcyB5IGxhIHJlYWxpZGFkIGVuIGVsIHRlcnJlbm8uCiAgICAKICAgIHAubWItNCBQcm9mdW5kaXphciBlbiBlc3RvcyBwcmluY2lwaW9zIGVzIGVzZW5jaWFsIHBhcmEgY29tcHJlbmRlciBjw7NtbyB1biBlbmZvcXVlIGludGVncmFsIHB1ZWRlIHRyYW5zZm9ybWFyIGxhIHZpZGEgZGUgbG9zIG5pw7FvcyB5IGxhcyBuacOxYXMsIG9mcmVjaWVuZG8gbm8gc29sbyBvcG9ydHVuaWRhZGVzIGRlIGRlc2Fycm9sbG8sIHNpbm8gdGFtYmnDqW4gdW4gZW50b3JubyBxdWUgcmVzcGFsZGUgc3UgcG90ZW5jaWFsIGh1bWFubyBlbiB0b2RhcyBzdXMgZGltZW5zaW9uZXMuIENvbW8gc2UgcGxhbnRlYSBlbiBsYSBFc3RyYXRlZ2lhIE5hY2lvbmFsIERlIENlcm8gYSBTaWVtcHJlLCBhdGVuZGVyIGxhIHByaW1lcmEgaW5mYW5jaWEsIGVzIGNvbnN0cnVpciBlbCBmdXR1cm8gZGUgdW5hIHNvY2llZGFkIG3DoXMganVzdGEgeSBlcXVpdGF0aXZhLgoKICAgICN0XzFfNC50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiAxLjRdIFJlcXVpc2l0b3MgeSBlc3TDoW5kYXJlcyBkZSBjYWxpZGFkLCBzZWfDum4gZWwgTUVOCiAgICAKICAgIHAubWItNCBMYSBjYWxpZGFkIGVkdWNhdGl2YSBlbiBsYSBwcmltZXJhIGluZmFuY2lhIGVzIHVuIHBpbGFyIGVzZW5jaWFsIHBhcmEgZWwgZGVzYXJyb2xsbyBpbnRlZ3JhbCBkZSBsb3MgbmnDsW9zIHkgbmnDsWFzLgoKICAgIC5iZy1jb2xvci01LnNoYWRvdy1zb2Z0LnB5LTQucHgtbGctNS5tYi01CiAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWFyb3VuZC5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAuY29sLW1kLWF1dG8KICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL3RlbXBsYXRlL2JnLWljb25vLXBkZi5zdmciLCBzdHlsZT0id2lkdGg6IDkwcHg7IikKICAgICAgICAuY29sCiAgICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1iZXR3ZWVuLmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgICAuY29sLm1iLTMubWItc20tMAogICAgICAgICAgICAgIGgzLm1iLTEgUmVxdWlzaXRvcyB5IGVzdMOhbmRhcmVzIGRlIGNhbGlkYWQKICAgICAgICAgICAgICBwIEVuIGVsIFBERiA8Yj5SZXF1aXNpdG9zIHkgZXN0w6FuZGFyZXMgZGUgY2FsaWRhZDwvYj4sIHNlIGFuYWxpemFuIGxvcyBsaW5lYW1pZW50b3MgZXN0YWJsZWNpZG9zIHBvciBlbCBNaW5pc3RlcmlvIGRlIEVkdWNhY2nDs24gTmFjaW9uYWwsIHF1ZSBpbmNsdXllbiBhc3BlY3RvcyBjbGF2ZSBjb21vIGluZnJhZXN0cnVjdHVyYSBhZGVjdWFkYSwgZm9ybWFjacOzbiBjb250aW51YSBkZWwgcGVyc29uYWwgZWR1Y2F0aXZvLCB1biBjdXJyw61jdWxvIGZsZXhpYmxlIHkgdW4gc2lzdGVtYSBkZSBldmFsdWFjacOzbiBjb25zdGFudGUuIEVzdGUgY29udGVuaWRvIGJ1c2NhIHJlZmxleGlvbmFyIHNvYnJlIGPDs21vIGVzdG9zIGVzdMOhbmRhcmVzIGdhcmFudGl6YW4gdW5hIGVkdWNhY2nDs24gaW5jbHVzaXZhLCBlcXVpdGF0aXZhIHkgZGUgY2FsaWRhZC4KICAgICAgICAgICAgLmNvbC1zbS1hdXRvCiAgICAgICAgICAgICAgYS5ib3Rvbi50ZXh0by1ibGFuY28oOmhyZWY9Im9idGVuZXJMaW5rKCcvZG93bmxvYWRzL0FuZXhvc18xLnBkZicpIiB0YXJnZXQ9Il9ibGFuayIpCiAgICAgICAgICAgICAgICBzcGFuIERlc2NhcmdhcgogICAgICAgICAgICAgICAgaS5mYXMuZmEtYXJyb3ctcmlnaHQKCiAgICAjdF8xXzUudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gMS41XSBJbmNsdXNpw7NuIHkgZXF1aWRhZCBlbiBsYSBlZHVjYWNpw7NuICAgICAKICAgIAogICAgcChkYXRhLWFvcz0iZmFkZS11cCIpIFVubyBkZSBsb3MgcHJpbmNpcGlvcyBtw6FzIGltcG9ydGFudGVzIHByb21vdmlkb3MgcG9yIGVsIE1pbmlzdGVyaW8gZGUgRWR1Y2FjacOzbiBOYWNpb25hbCAoTUVOKSwgZXMgbGEgaW5jbHVzacOzbi4gVG9kb3MgbG9zIG5pw7Fvcywgc2luIGltcG9ydGFyIHN1IGNvbnRleHRvIHNvY2lhbCwgZWNvbsOzbWljbyBvIGdlb2dyw6FmaWNvLCBkZWJlbiB0ZW5lciBhY2Nlc28gYSB1bmEgZWR1Y2FjacOzbiBpbmljaWFsIGRlIGNhbGlkYWQuIEVzdGUgcHJpbmNpcGlvIGZ1bmRhbWVudGFsIGltcGxpY2EgcXVlIGxhcyBpbnN0aXR1Y2lvbmVzIGVkdWNhdGl2YXMgZGViZW4gZWxpbWluYXIgY3VhbHF1aWVyIHRpcG8gZGUgYmFycmVyYSBxdWUgaW1waWRhIGxhIHBhcnRpY2lwYWNpw7NuIGRlIGxvcyBuacOxb3MgZW4gbG9zIHByb2Nlc29zIGVkdWNhdGl2b3MuIEVsIE1FTiBmb21lbnRhIHBvbMOtdGljYXMgZGUgZXF1aWRhZCwgZ2FyYW50aXphbmRvIHF1ZSB0b2RvcyBsb3MgbmnDsW9zLCBlc3BlY2lhbG1lbnRlIGFxdWVsbG9zIGVuIHNpdHVhY2nDs24gZGUgdnVsbmVyYWJpbGlkYWQsIHRlbmdhbiBsYXMgbWlzbWFzIG9wb3J0dW5pZGFkZXMgZGUgYWNjZXNvIHkgcGFydGljaXBhY2nDs24gKE1pbmlzdGVyaW8gZGUgRWR1Y2FjacOzbiBOYWNpb25hbCwgcy5mLikuCiAgICBwKGRhdGEtYW9zPSJmYWRlLWRvd24iKSBQYXJhIGxvZ3JhciB1bmEgdmVyZGFkZXJhIGluY2x1c2nDs24geSBlcXVpZGFkIGVuIGxhIGVkdWNhY2nDs24gaW5pY2lhbCwgZXMgY3J1Y2lhbCBhZG9wdGFyIGFjY2lvbmVzIGNvbmNyZXRhcyBlbiBsb3MgY2VudHJvcyBlZHVjYXRpdm9zLiBFbnRyZSBlc3RhcyBhY2Npb25lcywgc2UgZGVzdGFjYW4gbGEgYWRhcHRhY2nDs24gZGUgbG9zIGVudG9ybm9zIGbDrXNpY29zIHkgY3VycmljdWxhcmVzIHBhcmEgcmVzcG9uZGVyIGEgbGFzIG5lY2VzaWRhZGVzIGRlIHRvZG9zIGxvcyBuacOxb3MuIEVzdG8gcHVlZGUgaW5jbHVpciBsYSBlbGltaW5hY2nDs24gZGUgYmFycmVyYXMgYXJxdWl0ZWN0w7NuaWNhcywgbGEgcHJvdmlzacOzbiBkZSBtYXRlcmlhbGVzIGRpZMOhY3RpY29zIGFjY2VzaWJsZXMgeSBsYSBpbXBsZW1lbnRhY2nDs24gZGUgZXN0cmF0ZWdpYXMgcGVkYWfDs2dpY2FzIGluY2x1c2l2YXMgKEppbcOpbmV6ICYgUXVpbnRhbmEsIDIwMjApLgogICAgaDUubWItNSBMYXMgYWNjaW9uZXMgY29uY3JldGFzIHBhcmEgcHJvbW92ZXIgbGEgaW5jbHVzacOzbiB5IGxhIGVxdWlkYWQsIHNvbjoKCiAgICAuYmctZnVsbC13aWR0aC5iZy1mb25kby0yCiAgICAgIC5weC00LnB4LW1kLTUucGItbWQtMwogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5hbGlnbi1pdGVtcy1zdHJldGNoLm1iLTUKICAgICAgICAgIC5jb2wtbGctMy5tYi00KGRhdGEtYW9zPSJ6b29tLWluLXVwIikKICAgICAgICAgICAgLmN1c3RvbS1pbWFnZS1jYXJkLTIuaC0xMDAudGV4dC1jZW50ZXIKICAgICAgICAgICAgICBpbWcuY3VzdG9tLWltYWdlLWNhcmRfX2ltYWdlKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvMTIucG5nIiBhbHQ9IiIpCiAgICAgICAgICAgICAgLmN1c3RvbS1pbWFnZS1jYXJkX190ZXh0LnAtNAogICAgICAgICAgICAgICAgaDUgQWRhcHRhY2nDs24gZGVsIGVudG9ybm8gZsOtc2ljbwogICAgICAgICAgICAgICAgcC5tYi0wIEFzZWd1cmFyIHF1ZSBsb3MgZXNwYWNpb3Mgc2VhbiBhY2Nlc2libGVzIHBhcmEgdG9kb3MgbG9zIG5pw7FvcywgaW5kZXBlbmRpZW50ZW1lbnRlIGRlIHN1cyBoYWJpbGlkYWRlcyBmw61zaWNhcy4gRXN0byBwdWVkZSBpbXBsaWNhciBsYSBpbnN0YWxhY2nDs24gZGUgcmFtcGFzLCBhc2NlbnNvcmVzIHkgYmHDsW9zIGFkYXB0YWRvcy4KICAgICAgICAgIC5jb2wtbGctMy5tYi00KGRhdGEtYW9zPSJ6b29tLWluLWRvd24iKQogICAgICAgICAgICAuY3VzdG9tLWltYWdlLWNhcmQtMi5oLTEwMC50ZXh0LWNlbnRlcgogICAgICAgICAgICAgIGltZy5jdXN0b20taW1hZ2UtY2FyZF9faW1hZ2Uoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xMy5wbmciIGFsdD0iIikKICAgICAgICAgICAgICAuY3VzdG9tLWltYWdlLWNhcmRfX3RleHQucC00CiAgICAgICAgICAgICAgICBoNSBNYXRlcmlhbGVzIGRpZMOhY3RpY29zIGFjY2VzaWJsZXMKICAgICAgICAgICAgICAgIHAubWItMCBQcm92ZWVyIG1hdGVyaWFsZXMgZWR1Y2F0aXZvcywgY29tbyBsaWJyb3MgZW4gYnJhaWxsZSwganVndWV0ZXMgYWRhcHRhZG9zIHkgcmVjdXJzb3MgZGlnaXRhbGVzIGFjY2VzaWJsZXMsIHF1ZSBwdWVkYW4gc2VyIHV0aWxpemFkb3MgcG9yIG5pw7FvcyBjb24gZGl2ZXJzYXMgY2FwYWNpZGFkZXMuCiAgICAKICAgICAgICAgIC5jb2wtbGctMy5tYi00KGRhdGEtYW9zPSJ6b29tLWluLWRvd24iKQogICAgICAgICAgICAuY3VzdG9tLWltYWdlLWNhcmQtMi5oLTEwMC50ZXh0LWNlbnRlcgogICAgICAgICAgICAgIGltZy5jdXN0b20taW1hZ2UtY2FyZF9faW1hZ2Uoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xNC5wbmciIGFsdD0iIikKICAgICAgICAgICAgICAuY3VzdG9tLWltYWdlLWNhcmRfX3RleHQucC00CiAgICAgICAgICAgICAgICBoNSBGb3JtYWNpw7NuIGRlIGVkdWNhZG9yZXMKICAgICAgICAgICAgICAgIHAubWItMCBDYXBhY2l0YXIgYSBsb3MgZWR1Y2Fkb3JlcyBlbiBtZXRvZG9sb2fDrWFzIGluY2x1c2l2YXMgeSBlbiBlbCBtYW5lam8gZGUgbGEgZGl2ZXJzaWRhZCBlbiBlbCBhdWxhLiBFc3RvIGluY2x1eWUgbGEgc2Vuc2liaWxpemFjacOzbiBzb2JyZSBsYXMgZGlmZXJlbnRlcyBuZWNlc2lkYWRlcyB5IGxhIHByb21vY2nDs24gZGUgdW4gYW1iaWVudGUgZGUgcmVzcGV0byB5IGFjZXB0YWNpw7NuLgogICAgICAgICAgLmNvbC1sZy0zLm1iLTQoZGF0YS1hb3M9Inpvb20taW4tZG93biIpCiAgICAgICAgICAgIC5jdXN0b20taW1hZ2UtY2FyZC0yLmgtMTAwLnRleHQtY2VudGVyCiAgICAgICAgICAgICAgaW1nLmN1c3RvbS1pbWFnZS1jYXJkX19pbWFnZShzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzE1LnBuZyIgYWx0PSIiKQogICAgICAgICAgICAgIC5jdXN0b20taW1hZ2UtY2FyZF9fdGV4dC5wLTQKICAgICAgICAgICAgICAgIGg1IFBhcnRpY2lwYWNpw7NuIGRlIGxhIGNvbXVuaWRhZAogICAgICAgICAgICAgICAgcC5tYi0wIEludm9sdWNyYXIgYSBsYXMgZmFtaWxpYXMgeSBhIGxhIGNvbXVuaWRhZCBlbiBlbCBwcm9jZXNvIGVkdWNhdGl2bywgZm9tZW50YW5kbyB1bmEgY29sYWJvcmFjacOzbiBlc3RyZWNoYSBxdWUgZW5yaXF1ZXpjYSBlbCBlbnRvcm5vIGVkdWNhdGl2byB5IHJlc3BvbmRhIGEgbGFzIG5lY2VzaWRhZGVzIGVzcGVjw61maWNhcyBkZSBjYWRhIG5pw7FvLgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTEubWItNQogICAgICAucHgtNC5weC1tZC01LnB5LTQKICAgICAgICAucm93LmFsaWduLWl0ZW1zLWNlbnRlcgogICAgICAgICAgLmNvbC1sZy1hdXRvCiAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWExLzMuc3ZnIiwgc3R5bGU9Im1heC13aWR0aDogOTBweCIpLm14LWF1dG8KICAgICAgICAgIC5jb2wtbGcKICAgICAgICAgICAgaDUubWItMCBSZWZsZXhpw7NuOiAKICAgICAgICAgICAgcC5tYi0wIEEgbWVkaWRhIHF1ZSBzZSBlc3R1ZGlhbiBsb3MgPGI+cmVxdWlzaXRvcyB5IGVzdMOhbmRhcmVzIGRlIGNhbGlkYWQ8L2I+IGVzdGFibGVjaWRvcyBwb3IgZWwgTUVOLCBzZSBoYWNlIGV2aWRlbnRlIGxhIGltcG9ydGFuY2lhIGRlIGNyZWFyIHVuIGVudG9ybm8gZWR1Y2F0aXZvIHF1ZSByZXNwb25kYSBhIGxhcyBuZWNlc2lkYWRlcyBkZSBjYWRhIG5pw7FvLiDCv0PDs21vIHB1ZWRlbiBsb3MgcHJvZmVzaW9uYWxlcyBkZSBsYSBlZHVjYWNpw7NuIGluZmx1aXIgZW4gbGEgaW1wbGVtZW50YWNpw7NuIGRlIGVzdG9zIGVzdMOhbmRhcmVzIHBhcmEgbWVqb3JhciBsYSBlZHVjYWNpw7NuIGluZmFudGlsPyBBbCByZWZsZXhpb25hciBzb2JyZSBlc3RvcyBwcmluY2lwaW9zLCBubyBzb2xvIHNlIGFkcXVpZXJlIHVuIGNvbm9jaW1pZW50byBtw6FzIHByb2Z1bmRvIGRlbCBzaXN0ZW1hIGVkdWNhdGl2byBjb2xvbWJpYW5vLCBzaW5vIHF1ZSB0YW1iacOpbiBzZSBhZHF1aWVyZW4gaGVycmFtaWVudGFzIHZhbGlvc2FzIHBhcmEgaW1wbGVtZW50YXIgcHLDoWN0aWNhcyBxdWUgZmF2b3JlemNhbiBlbCBkZXNhcnJvbGxvIGludGVncmFsIGRlIGxvcyBuacOxb3MuCiAgICAKICAgICN0XzFfNi50aXR1bG8tc2VndW5kbyhkYXRhLWFvcz0iZmxpcC11cCIpCiAgICAgIGgyICNbc3BhbiAxLjZdIEluZnJhZXN0cnVjdHVyYSB5IHBlcmZpbCBkZWwgdGFsZW50byBodW1hbm8gCgogICAgcCBJbWFnaW5lbW9zIHVuIGVzcGFjaW8gZG9uZGUgY2FkYSByaW5jw7NuIGVzdMOhIGRpc2XDsWFkbyBwYXJhIGZvbWVudGFyIGVsIGRlc2Fycm9sbG8gZGUgbG9zIG5pw7FvcyBkZXNkZSBzdXMgcHJpbWVyb3MgYcOxb3M6IGNvbG9yZXMgdml2b3MsIG1hdGVyaWFsZXMgc2VndXJvcyB5IMOhcmVhcyBxdWUgaW52aXRhbiBhbCBqdWVnbywgbGEgZXhwbG9yYWNpw7NuIHkgZWwgYXByZW5kaXphamUuIEVzZSBlcyBlbCBpZGVhbCBkZSBpbmZyYWVzdHJ1Y3R1cmEgZW4gZWwgc2lzdGVtYSBkZSBlZHVjYWNpw7NuIGluaWNpYWwsIHBlcm8gwr9jw7NtbyBzZSBsb2dyYSBlbiB1biBwYcOtcyB0YW4gZGl2ZXJzbyBjb21vIENvbG9tYmlhPyBZLCBzb2JyZSB0b2RvLCDCv3F1acOpbmVzIHNvbiBsb3MgcmVzcG9uc2FibGVzIGRlIGhhY2VyIGRlIGVzb3MgZXNwYWNpb3MgdW4gbHVnYXIgZGUgY3JlY2ltaWVudG8gaW50ZWdyYWw/CiAgICAKICAgIC5iZy1jb2xvci02Lm1iLTUKICAgICAgLnB4LTQucHgtbWQtNS5weS00CiAgICAgICAgcC5tYi0wIEVuIGVsIHNpc3RlbWEgZGUgZWR1Y2FjacOzbiBpbmljaWFsLCBsYSBpbmZyYWVzdHJ1Y3R1cmEgdmEgbXVjaG8gbcOhcyBhbGzDoSBkZSB1biBsdWdhciBkb25kZSBsb3MgbmnDsW9zIGFzaXN0ZW4gYSBkaWFyaW8uIFNlIHRyYXRhIGRlIGNvbnN0cnVpciBlbnRvcm5vcyBxdWUgZXN0aW11bGVuIHN1IGNyZWF0aXZpZGFkLCByZXNwZXRlbiBzdSBzZWd1cmlkYWQgeSByZXNwb25kYW4gYSBzdXMgbmVjZXNpZGFkZXMuIFBvciBlamVtcGxvOgoKICAgIC5yb3cuYWxpZ24taXRlbXMtc3RhcnQubWItNQogICAgICAuY29sLWxnLTUub3JkZXItMihkYXRhLWFvcz0iZmFkZS1yaWdodCIpCiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hMS8xNi5wbmciLCBhbHQ9IiIpLm1iLTQubWItbGctMAogICAgICAuY29sLWxnLTcub3JkZXItMS5tYi0zLm1iLWxnLTAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAKICAgICAgICBBY29yZGlvbkEodGlwbz0iYiIpCiAgICAgICAgICAuZGl2KHRpdHVsbz0iU2VndXJpZGFkIHkgZXN0w61tdWxvIikKICAgICAgICAgICAgcC5tYi0wIExvcyBlc3BhY2lvcyBkZWJlbiBzZXIgc2VndXJvcywgY29uIG1vYmlsaWFyaW8gYWRlY3VhZG8gcGFyYSBsYSBlZGFkIHkgbWF0ZXJpYWxlcyBxdWUgZXN0aW11bGVuIGxvcyBzZW50aWRvcy4gVW4gYXVsYSBubyBzb2xvIGVzIHVuIGx1Z2FyIHBhcmEgYXByZW5kZXI7IHRhbWJpw6luIGVzIHVuIGVzcGFjaW8gcGFyYSBkZXNjdWJyaXIgeSBjcmVhci4KCiAgICAKICAgICAgICAgIC5kaXYodGl0dWxvPSJBZGFwdGFjacOzbiBhIGNvbnRleHRvcyBsb2NhbGVzIikKICAgICAgICAgICAgcC5tYi0wIEVuIHJlZ2lvbmVzIHJ1cmFsZXMsIGxvcyBlc3BhY2lvcyBwdWVkZW4gc2VyIG3DoXMgZmxleGlibGVzIHkgYXByb3ZlY2hhciByZWN1cnNvcyBuYXR1cmFsZXMsIG1pZW50cmFzIHF1ZSBlbiBjaXVkYWRlcyBncmFuZGVzIHNlIHJlcXVpZXJlbiBhbWJpZW50ZXMgZXNwZWNpYWxpemFkb3MuIMK/Q8OzbW8gcG9kcsOtYW4gZXN0YXMgZGlmZXJlbmNpYXMgZW5yaXF1ZWNlciBlbCBhcHJlbmRpemFqZSBkZSBsb3MgbmnDsW9zPwogICAgCiAgICAgICAgICAuZGl2KHRpdHVsbz0iQWNjZXNpYmlsaWRhZCB1bml2ZXJzYWwiKQogICAgICAgICAgICBwLm1iLTAgTmluZ8O6biBuacOxbyBkZWJlcsOtYSBlbmZyZW50YXIgYmFycmVyYXMgcGFyYSBhcHJlbmRlci4gwr9Dw7NtbyBzZSBnYXJhbnRpemEgcXVlIGxvcyBlc3BhY2lvcyBzZWFuIGluY2x1c2l2b3MgcGFyYSB0b2RvcywgaW5jbHV5ZW5kbyBhcXVlbGxvcyBjb24gZGlzY2FwYWNpZGFkZXMgZsOtc2ljYXMgbyBzZW5zb3JpYWxlcz8KICAgIAogICAgcC5tYi00IFNpIGxhIGluZnJhZXN0cnVjdHVyYSBlcyBlbCBlc2NlbmFyaW8sIGxvcyBhZ2VudGVzIGVkdWNhdGl2b3Mgc29uIGxvcyBwcm90YWdvbmlzdGFzLiBFc3RhcyBwZXJzb25hcyBubyBzb2xvIGVuc2XDsWFuOyB0YW1iacOpbiBpbnNwaXJhbiB5IGFjb21wYcOxYW4gYSBsb3MgbmnDsW9zIGVuIHN1cyBwcmltZXJvcyBwYXNvcyBoYWNpYSBlbCBkZXNhcnJvbGxvIGludGVncmFsLiBDb25vemNhbW9zIHF1w6kgZGViZSB0ZW5lciB1biBidWVuIGRvY2VudGU6CgogICAgLmJnLWZ1bGwtd2lkdGguYmctY29sb3ItaW5mby5tYi01CiAgICAgIC5wLTQucC1tZC01CiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlci5tYi01CiAgICAgICAgICAuY29sLWxnLTcKICAgICAgICAgICAgSW1hZ2VuSW5mb2dyYWZpY2EuY29sb3Itc2VjdW5kYXJpbwogICAgICAgICAgICAgIHRlbXBsYXRlKHYtc2xvdDppbWFnZW4pCiAgICAgICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTEvMTcuc3ZnJywgYWx0PScnLCBzdHlsZT0ibWF4LXdpZHRoOiAxMTA2cHg7IikubXgtYXV0bwogICAgCiAgICAgICAgICAgICAgLmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucC0zKHg9IjM2JSIgeT0iMzMlIiBudW1lcm89IisiKQogICAgICAgICAgICAgICAgaDUgRm9ybWFjacOzbiBlc3BlY2lhbGl6YWRhCiAgICAgICAgICAgICAgICBwIFVuIGJ1ZW4gZG9jZW50ZSB0aWVuZSBjb25vY2ltaWVudG9zIHPDs2xpZG9zIHNvYnJlIGRlc2Fycm9sbG8gaW5mYW50aWwgeSBwZWRhZ29nw61hLiBQZXJvIG5vIGJhc3RhIGNvbiBzYWJlciwgwr9jw7NtbyBzZSBhc2VndXJhIHF1ZSB0YW1iacOpbiBzZSBhY3R1YWxpY2VuIGNvbnN0YW50ZW1lbnRlPwogICAgICAKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUuYm94LXNoYWRvdy5wLTMoeD0iMjAlIiB5PSI1Ny41JSIgbnVtZXJvPSIrIikKICAgICAgICAgICAgICAgIGg1IEhhYmlsaWRhZGVzIHNvY2lvZW1vY2lvbmFsZXMKICAgICAgICAgICAgICAgIHAgTcOhcyBhbGzDoSBkZSBsYSB0w6ljbmljYSwgbGEgZW1wYXTDrWEgeSBsYSBjYXBhY2lkYWQgZGUgY29uZWN0YXIgZW1vY2lvbmFsbWVudGUgY29uIGxvcyBuacOxb3MsIHNvbiBlc2VuY2lhbGVzLiDCv1F1w6kgdGFudG8gc2UgdmFsb3JhIGVzdGEgZGltZW5zacOzbiBlbiBsYSBwcsOhY3RpY2EgZWR1Y2F0aXZhPwogICAgICAKICAgICAgICAgICAgICAuYmctY29sb3Itd2hpdGUuYm94LXNoYWRvdy5wLTMoeD0iMzYlIiB5PSI4MyUiIG51bWVybz0iKyIpCiAgICAgICAgICAgICAgICBoNSBUcmFiYWpvIGludGVyZGlzY2lwbGluYXJpbwogICAgICAgICAgICAgICAgcCBVbiBkb2NlbnRlIGVuIGVzdGUgbml2ZWwgdHJhYmFqYSBlbiBlcXVpcG8gY29uIHBzaWPDs2xvZ29zLCB0cmFiYWphZG9yZXMgc29jaWFsZXMgeSBwcm9mZXNpb25hbGVzIGRlIGxhIHNhbHVkLiDCv0PDs21vIHNlIGZvbWVudGEgZXN0YSBjb2xhYm9yYWNpw7NuIGVuIGVsIGTDrWEgYSBkw61hPwogICAgCiAgICAuYmctY29sb3ItNi5tYi01CiAgICAgIC5weC00LnB4LW1kLTUucHktNAogICAgICAgIHAubWItMCBFbiBhbGd1bm9zIGx1Z2FyZXMsIGxvcyBlc3BhY2lvcyBubyBzb24gYWRlY3VhZG9zIG8gZmFsdGFuIGRvY2VudGVzIGNhcGFjaXRhZG9zLiBFc3RvIHBsYW50ZWEgdW5hIHByZWd1bnRhIGltcG9ydGFudGU6IMK/cXXDqSBtw6FzIHNlIHB1ZWRlIGhhY2VyIHBhcmEgZ2FyYW50aXphciBxdWUgdG9kb3MgbG9zIG5pw7FvcyByZWNpYmFuIGxhIG1lam9yIGF0ZW5jacOzbiBwb3NpYmxlLCBzaW4gaW1wb3J0YXIgZMOzbmRlIHZpdmFuPwoKICAgIC5yb3cubWItNQogICAgICAuY29sLWxnLTUub3JkZXItMgogICAgICAgIGZpZ3VyZQogICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTEvMTgucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTcub3JkZXItMS5tYi0zLm1iLWxnLTAKICAgICAgICBoNSBDb2xvbWJpYTogYXZhbmNlcyB5IGRlc2Fmw61vcwogICAgICAgIHAoZGF0YS1hb3M9ImZhZGUtbGVmdCIpIEdyYWNpYXMgYSBsYSBFc3RyYXRlZ2lhIE5hY2lvbmFsIERlIENlcm8gYSBTaWVtcHJlLCBzZSBoYW4gY3JlYWRvIENlbnRyb3MgZGUgRGVzYXJyb2xsbyBJbmZhbnRpbCAoQ0RJKSBlbiB2YXJpYXMgcmVnaW9uZXMsIHkgc2UgaGFuIGltcHVsc2FkbyBwcm9ncmFtYXMgZGUgZm9ybWFjacOzbiBwYXJhIGRvY2VudGVzLiBTaW4gZW1iYXJnbywgcGVyc2lzdGVuIHJldG9zIGNvbW8gYW1wbGlhciBsYSBjb2JlcnR1cmEgeSBnYXJhbnRpemFyIGxhIHNvc3RlbmliaWxpZGFkIGRlIGVzdGFzIGluaWNpYXRpdmFzLgogICAgCiAgICAgICAgLmJnLWNvbG9yLTMucC01LnRhcmpldGEoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAgICAgICBwLm1iLTAgwr9FcyBzdWZpY2llbnRlIGxvIHF1ZSBzZSBoYSBoZWNobyBoYXN0YSBhaG9yYT8gUmVmbGV4aW9uYXIgc29icmUgbGEgaW5mcmFlc3RydWN0dXJhIHkgZWwgdGFsZW50byBodW1hbm8gZW4gbGEgZWR1Y2FjacOzbiBpbmljaWFsIG5vIGVzIHNvbG8gdW4gZWplcmNpY2lvIGFjYWTDqW1pY287IGVzIHVuYSBvcG9ydHVuaWRhZCBwYXJhIGltYWdpbmFyIHkgcHJvcG9uZXIgc29sdWNpb25lcyBxdWUgaW1wYWN0ZW4gcG9zaXRpdmFtZW50ZSwgZW4gbGEgdmlkYSBkZSBsb3MgbmnDsW9zLgoKCgogICAgLmJnLWZ1bGwtd2lkdGguYm9yZGVyLXRvcC5jb2xvci1wcmltYXJpbwogICAgICAucC00LnAtbWQtNQogICAgICAgIGgyKGRhdGEtYW9zPSJmYWRlLWxlZnQiKSBNQVRFUklBTCBDT01QTEVNRU5UQVJJTwogICAgICAgIC5yb3cubWF0ZXJpYWwtY29tcGxlbWVudGFyaW8KICAgICAgICAgIC5jb2wtMTIuY29sLW1kLTYuY29sLWxnLTcKICAgICAgICAgICAgcCBMb3MgaW52aXRhbW9zIGEgZXhwbG9yYXIgZWwgbWF0ZXJpYWwgY29tcGxlbWVudGFyaW8gZGUgZXN0ZSBjdXJzbywgZW4gZXN0YSBzZWNjacOzbiBlbmNvbnRyYXLDoSByZWN1cnNvcyBxdWUgbGUgcGVybWl0aXLDoW4gcHJvZnVuZGl6YXIgIHkgZW5yaXF1ZWNlciBzdSBhcHJlbmRpemFqZSBlbiBsb3MgdGVtYXMgdHJhdGFkb3MgZW4gZXN0YSB1bmlkYWQuCgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3d3dy5taW5lZHVjYWNpb24uZ292LmNvLzE2MjEvYXJ0aWNsZXMtMzQxODEwX2FyY2hpdm9fcGRmX3NlbnRpZG9fZGVfbGFfZWR1Y2FjaW9uLnBkZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIE1pbmlzdGVyaW8gZGUgRWR1Y2FjacOzbiBOYWNpb25hbC4gKHMuZi4pLiBTZW50aWRvIGRlIGxhIGVkdWNhY2nDs24gaW5pY2lhbC4gCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vZWxpYnJvLm5ldC9lcy9sYy9lbGlicm9jb20vdGl0dWxvcy8xMTQxMzIgIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgU2VycmFubyBSb21lcm8sIEEuICYgU2FudG9zIFJvZHLDrWd1ZXosIE0uICgyMDE0KS4gUHJveWVjdG8gZGUgYXRlbmNpw7NuIGEgbGEgaW5mYW5jaWE6IGNpY2xvIGZvcm1hdGl2bzogZWR1Y2FjacOzbiBpbmZhbnRpbDogKCBlZC4pLiBNaW5pc3RlcmlvIGRlIEVkdWNhY2nDs24geSBGb3JtYWNpw7NuIFByb2Zlc2lvbmFsIGRlIEVzcGHDsWEuIAogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3d3dy5taW5lZHVjYWNpb24uZ292LmNvLyAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBNaW5pc3RlcmlvIGRlIEVkdWNhY2nDs24gTmFjaW9uYWwgZGUgQ29sb21iaWEuIChuLmQuKS4gRGVzYXJyb2xsbyBpbmZhbnRpbCB5IGNvbXBldGVuY2lhcyBlbiBsYSBQcmltZXJhIGluZmFuY2lhLiAgCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vd3d3Lm1pbmVkdWNhY2lvbi5nb3YuY28vMTYyMS9hcnRpY2xlcy0zNDAwMjFfcmVjdXJzb18xLnBkZiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIE1pbmlzdGVyaW8gZGUgRWR1Y2FjacOzbiBOYWNpb25hbCBkZSBDb2xvbWJpYS4gKDIwMDYpLiBFc3TDoW5kYXJlcyBiw6FzaWNvcyBkZSBjb21wZXRlbmNpYXM6IExlbmd1YWplLCBNYXRlbcOhdGljYXMsIENpZW5jaWFzIHkgQ2l1ZGFkYW5hcy4gQm9nb3TDoTogTUVOLgoKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cDovL3d3dy5jb2xvbWJpYWFwcmVuZGUuZWR1LmNvL2NvbnRlbmlkb3MvY29sZWNjaW9uL2RlcmVjaG9zLWJhc2ljb3MtZGUtYXByZW5kaXphamUiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBNaW5pc3RlcmlvIGRlIEVkdWNhY2nDs24gTmFjaW9uYWwgZGUgQ29sb21iaWEuICgyMDE2KS4gRGVyZWNob3MgQsOhc2ljb3MgZGUgQXByZW5kaXphamUgLSBEQkEuIEJvZ290w6E6IE1FTi4KCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vd3d3LmxhYnN0ZXIuY29tLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIExhYnN0ZXIgKGVkdWNhY2nDs24pLgoKCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXl0LnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PU5KZDFpT1NzcUt3JmFiX2NoYW5uZWw9cGVybWlzb3BhcmFzZXJuaW5vICIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIFBlcm1pc29wYXJhc2VybmlubyAoIDE5IGRpYyAyMDEzKS4gTGEgaW1wb3J0YW5jaWEgZGUgbGEgaW5mYW5jaWEgCgogICAgICAgICAgLmNvbC0xMi5jb2wtbWQtNi5jb2wtbGctMy5vZmZzZXQtbGctMQogICAgICAgICAgICBmaWd1cmUKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9tYXRlcmlhbC1jb21wbGVtZW50YXJpby5zdmcnLCBhbHQ9JycpCgo="},null]}