{"remainingRequest":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/pug-plain-loader/index.js!/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/src/views/curso/Tema2.vue?vue&type=template&id=9d83eb8a&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/src/views/curso/Tema2.vue","mtime":1751583507729},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Tendencia_Educacion_Infantil/U1_Tendencia_Educacion_Infantil/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}